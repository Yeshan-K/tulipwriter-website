@import "tailwindcss";

@config '../tailwind.config.js';

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }

  :root {
    --appBackground: 0 0% 8.9%;
    --appLayoutBorder: 0 0% 14.9%;
    --appLayoutText: 0 0% 80%;
    --appLayoutTextMuted: 0 0% 50%;
    --appLayoutShadow: 0 0% 0%;
    --appLayoutGentleShadow: 0 0% 3%;
    --appLayoutHover: 0 0% 6.9%;
    --appLayoutHoverLight: 0 0% 8.3%;
    --appLayoutInverseHover: 0 0% 13.9%;
    --appLayoutInputBackground: 0 0% 14.9%;
    --appLayoutPressed: 0 0% 3%;
    --appLayoutDestruct: 0 62.8% 30.6%;
    --appLayoutDirectoryNodeHover: 0 0% 100% / 15%;
    --specialButton: 0 0% 90%;
    --specialButtonHover: 0 0% 60%;
    --specialButtonDisabled: 0 0% 50%;
    --activitySelectLine: 0 0% 100%;
    --validationErrorText: 0 45% 41%;
    --sidePanelDragHandle: 0 0% 100% / 15%;
  }

  .dark {
    --appBackground: 0 0% 8.9%;
    --appBackgroundAccent: 0 0% 6.9%;
    --appLayoutBorder: 0 0% 16.9%;
    --appLayoutText: 0 0% 80%;
    --appLayoutShadow: 0 0% 0%;
    --appLayoutGentleShadow: 0 0% 3%;
    --appLayoutHover: 0 0% 15%;
    --appLayoutDarkHover: 0 0% 3.9%;
    --appLayoutInverseHover: 0 0% 20%;
    --appLayoutInputBackground: 0 0% 14.9%;
    --appLayoutPressed: 0 0% 3%;
    --appLayoutDestruct: 0 90% 38%;
    --appLayoutHighlight: 0 0% 100%;
    --activitySelectLine: 0 0% 100%;
    --appLayoutSubmitButton: 0 0% 80%;
  }
}

@theme inline {
  --color-appBackground: hsl(var(--appBackground));
  --color-appLayoutBorder: hsl(var(--appLayoutBorder));
  --color-appLayoutText: hsl(var(--appLayoutText));
  --color-appLayoutTextMuted: hsl(var(--appLayoutTextMuted));
  --color-appLayoutShadow: hsl(var(--appLayoutShadow));
  --color-appLayoutGentleShadow: hsl(var(--appLayoutGentleShadow));
  --color-appLayoutHover: hsl(var(--appLayoutHover));
  --color-appLayoutHoverLight: hsl(var(--appLayoutHoverLight));
  --color-appLayoutInverseHover: hsl(var(--appLayoutInverseHover));
  --color-appLayoutInputBackground: hsl(var(--appLayoutInputBackground));
  --color-appLayoutPressed: hsl(var(--appLayoutPressed));
  --color-appLayoutDestruct: hsl(var(--appLayoutDestruct));
  --color-appLayoutDirectoryNodeHover: hsl(var(--appLayoutDirectoryNodeHover));
  --color-specialButton: hsl(var(--specialButton));
  --color-specialButtonHover: hsl(var(--specialButtonHover));
  --color-specialButtonDisabled: hsl(var(--specialButtonDisabled));
  --color-activitySelectLine: hsl(var(--activitySelectLine));
  --color-validationErrorText: hsl(var(--validationErrorText));
  --color-sidePanelDragHandle: hsl(var(--sidePanelDragHandle));
  --color-appBackgroundAccent: hsl(var(--appBackgroundAccent));
  --color-appLayoutDarkHover: hsl(var(--appLayoutDarkHover));
  --color-appLayoutHighlight: hsl(var(--appLayoutHighlight));
  --color-appLayoutSubmitButton: hsl(var(--appLayoutSubmitButton));
}

/* reset
  button,
  p {
    all: unset;
  } */

.NavigationMenuRoot {
  position: relative;
  display: flex;
  justify-content: center;
  width: 100vw;
  z-index: 1;
}

.NavigationMenuList {
  display: flex;
  justify-content: center;
  background-color: white;
  padding: 4px;
  border-radius: 6px;
  list-style: none;
  box-shadow: 0 2px 10px black;
  margin: 0;
}

.NavigationMenuTrigger,
.NavigationMenuLink {
  padding: 8px 12px;
  outline: none;
  user-select: none;
  font-weight: 500;
  line-height: 1;
  border-radius: 4px;
  font-size: 15px;
  color: violet;
}
.NavigationMenuTrigger:focus,
.NavigationMenuLink:focus {
  box-shadow: 0 0 0 2px violet;
}
.NavigationMenuTrigger:hover,
.NavigationMenuLink:hover {
  background-color: lightpink;
}

.NavigationMenuTrigger {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 2px;
}

.NavigationMenuLink {
  display: block;
  text-decoration: none;
  font-size: 15px;
  line-height: 1;
}

.NavigationMenuContent {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  animation-duration: 250ms;
  animation-timing-function: ease;
}
.NavigationMenuContent[data-motion="from-start"] {
  animation-name: enterFromLeft;
}
.NavigationMenuContent[data-motion="from-end"] {
  animation-name: enterFromRight;
}
.NavigationMenuContent[data-motion="to-start"] {
  animation-name: exitToLeft;
}
.NavigationMenuContent[data-motion="to-end"] {
  animation-name: exitToRight;
}
@media only screen and (min-width: 600px) {
  .NavigationMenuContent {
    width: auto;
  }
}

.NavigationMenuIndicator {
  display: flex;
  align-items: flex-end;
  justify-content: center;
  height: 10px;
  top: 100%;
  overflow: hidden;
  z-index: 1;
  transition:
    width,
    transform 250ms ease;
}
.NavigationMenuIndicator[data-state="visible"] {
  animation: fadeIn 200ms ease;
}
.NavigationMenuIndicator[data-state="hidden"] {
  animation: fadeOut 200ms ease;
}

.NavigationMenuViewport {
  position: relative;
  transform-origin: top center;
  margin-top: 10px;
  width: 100%;
  background-color: white;
  border-radius: 6px;
  overflow: hidden;
  box-shadow:
    hsl(206 22% 7% / 35%) 0px 10px 38px -10px,
    hsl(206 22% 7% / 20%) 0px 10px 20px -15px;
  height: 25rem;
  transition:
    width,
    height,
    300ms ease;
}
.NavigationMenuViewport[data-state="open"] {
  animation: scaleIn 200ms ease;
}
.NavigationMenuViewport[data-state="closed"] {
  animation: scaleOut 200ms ease;
}
@media only screen and (min-width: 600px) {
  .NavigationMenuViewport {
    width: 40rem;
  }
}

.List {
  display: grid;
  padding: 22px;
  margin: 0;
  column-gap: 10px;
  list-style: none;
}
@media only screen and (min-width: 600px) {
  .List.one {
    width: 500px;
    grid-template-columns: 0.75fr 1fr;
  }
  .List.two {
    width: 600px;
    grid-auto-flow: column;
    grid-template-rows: repeat(3, 1fr);
  }
}

.ListItemLink {
  display: block;
  outline: none;
  text-decoration: none;
  user-select: none;
  padding: 12px;
  border-radius: 6px;
  font-size: 15px;
  line-height: 1;
}
.ListItemLink:focus {
  box-shadow: 0 0 0 2px violet;
}
.ListItemLink:hover {
  background-color: darkmagenta;
}

.ListItemHeading {
  font-weight: 500;
  line-height: 1.2;
  margin-bottom: 5px;
  color: violet;
}

.ListItemText {
  color: lightpink;
  line-height: 1.4;
  font-weight: initial;
}

.Callout {
  display: flex;
  justify-content: flex-end;
  flex-direction: column;
  width: 100%;
  height: 100%;
  background: linear-gradient(135deg, purple 0%, black 100%);
  border-radius: 6px;
  padding: 25px;
  text-decoration: none;
  outline: none;
  user-select: none;
}
.Callout:focus {
  box-shadow: 0 0 0 2px violet;
}

.CalloutHeading {
  color: white;
  font-size: 18px;
  font-weight: 500;
  line-height: 1.2;
  margin-top: 16px;
  margin-bottom: 7px;
}

.CalloutText {
  color: lightpink;
  font-size: 14px;
  line-height: 1.3;
}

.ViewportPosition {
  position: absolute;
  display: flex;
  justify-content: center;
  width: 100%;
  top: 100%;
  left: 0;
  perspective: 2000px;
}

.CaretDown {
  position: relative;
  color: violet;
  top: 1px;
  transition: transform 250ms ease;
}
[data-state="open"] > .CaretDown {
  transform: rotate(-180deg);
}

.Arrow {
  position: relative;
  top: 70%;
  background-color: white;
  width: 10px;
  height: 10px;
  transform: rotate(45deg);
  border-top-left-radius: 2px;
}

@keyframes enterFromRight {
  from {
    opacity: 0;
    transform: translateX(200px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes enterFromLeft {
  from {
    opacity: 0;
    transform: translateX(-200px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes exitToRight {
  from {
    opacity: 1;
    transform: translateX(0);
  }
  to {
    opacity: 0;
    transform: translateX(200px);
  }
}

@keyframes exitToLeft {
  from {
    opacity: 1;
    transform: translateX(0);
  }
  to {
    opacity: 0;
    transform: translateX(-200px);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: rotateX(-30deg) scale(0.9);
  }
  to {
    opacity: 1;
    transform: rotateX(0deg) scale(1);
  }
}

@keyframes scaleOut {
  from {
    opacity: 1;
    transform: rotateX(0deg) scale(1);
  }
  to {
    opacity: 0;
    transform: rotateX(-10deg) scale(0.95);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}
